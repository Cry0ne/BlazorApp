@page "/test"
@using AntDesign;
@using BlazorApp.Context;
@using BlazorApp.Entities;
@inject IDbContextFactory<PhoneBookContext> DbFactory
<Space>
    <SpaceItem>
        <Button OnClick="LoadData">Load data</Button>
    </SpaceItem>
</Space>

<Table DataSource=@Contacts>
    <Selection />
        <PropertyColumn Filterable Property="c=>c.Id" Title="Id"></PropertyColumn>
        <PropertyColumn Filterable Property="c=>c.Name" Title="Имя"></PropertyColumn>
        <PropertyColumn Filterable Property="c=>c.Phone" Title="Номер телефона"></PropertyColumn>
        <PropertyColumn Filterable Property="c=>c.Address" Title="Адрес"></PropertyColumn>
        <PropertyColumn Filterable Property="c=>c.Office" Title="Кабинет"></PropertyColumn>
        <ActionColumn>
            <Popconfirm Title="Удалить?"
                        OnConfirm="()=> deleteRow(context.Id)"
                        OkText="Да"
                        CancelText="Нет">
                <a>Удалить</a>
            </Popconfirm>
        </ActionColumn>
</Table>

@code {

    private List<Contact> Contacts { get; set; } = new List<Contact>();

    private async Task LoadData()
    {
        using var context = DbFactory.CreateDbContext();
        Contacts = await context.Contacts.ToListAsync();
    }

    protected override async void OnInitialized()
    {
        await ReloadAsync();
        //using var context = DbFactory.CreateDbContext();
        //Contacts = await context.Contacts.ToListAsync();
    }

    private async Task ReloadAsync()
    {
        using var context = DbFactory.CreateDbContext();
        Contacts = await context.Contacts.ToListAsync();
    }

    private async Task deleteRow(int id)

    {   
        try
        {
           var contact = Contacts.Find(d => d.Id == id);
            using var context = DbFactory.CreateDbContext();

            if (contact is not null)
            {
                Contacts.Remove(contact);
                context.Remove<Contact>(contact);
                await context.SaveChangesAsync();
            }
        }
        catch
        {
        }
    }
}